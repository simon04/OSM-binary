// Code generated by Wire protocol buffer compiler, do not edit.
// Source: OSMPBF.HeaderBBox in osmformat.proto
package crosby.binary.wire;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * The bounding box field in the OSM header. BBOX, as used in the OSM
 * header. Units are always in nanodegrees -- they do not obey
 * granularity rules.
 */
public final class HeaderBBox extends Message<HeaderBBox, HeaderBBox.Builder> {
  public static final ProtoAdapter<HeaderBBox> ADAPTER = new ProtoAdapter_HeaderBBox();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_LEFT = 0L;

  public static final Long DEFAULT_RIGHT = 0L;

  public static final Long DEFAULT_TOP = 0L;

  public static final Long DEFAULT_BOTTOM = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long left;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long right;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long top;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#SINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long bottom;

  public HeaderBBox(Long left, Long right, Long top, Long bottom) {
    this(left, right, top, bottom, ByteString.EMPTY);
  }

  public HeaderBBox(Long left, Long right, Long top, Long bottom, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.left = left;
    this.right = right;
    this.top = top;
    this.bottom = bottom;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.left = left;
    builder.right = right;
    builder.top = top;
    builder.bottom = bottom;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof HeaderBBox)) return false;
    HeaderBBox o = (HeaderBBox) other;
    return unknownFields().equals(o.unknownFields())
        && left.equals(o.left)
        && right.equals(o.right)
        && top.equals(o.top)
        && bottom.equals(o.bottom);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + left.hashCode();
      result = result * 37 + right.hashCode();
      result = result * 37 + top.hashCode();
      result = result * 37 + bottom.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(", left=").append(left);
    builder.append(", right=").append(right);
    builder.append(", top=").append(top);
    builder.append(", bottom=").append(bottom);
    return builder.replace(0, 2, "HeaderBBox{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<HeaderBBox, Builder> {
    public Long left;

    public Long right;

    public Long top;

    public Long bottom;

    public Builder() {
    }

    public Builder left(Long left) {
      this.left = left;
      return this;
    }

    public Builder right(Long right) {
      this.right = right;
      return this;
    }

    public Builder top(Long top) {
      this.top = top;
      return this;
    }

    public Builder bottom(Long bottom) {
      this.bottom = bottom;
      return this;
    }

    @Override
    public HeaderBBox build() {
      if (left == null
          || right == null
          || top == null
          || bottom == null) {
        throw Internal.missingRequiredFields(left, "left",
            right, "right",
            top, "top",
            bottom, "bottom");
      }
      return new HeaderBBox(left, right, top, bottom, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_HeaderBBox extends ProtoAdapter<HeaderBBox> {
    public ProtoAdapter_HeaderBBox() {
      super(FieldEncoding.LENGTH_DELIMITED, HeaderBBox.class, "type.googleapis.com/OSMPBF.HeaderBBox", Syntax.PROTO_2, null);
    }

    @Override
    public int encodedSize(HeaderBBox value) {
      int result = 0;
      result += ProtoAdapter.SINT64.encodedSizeWithTag(1, value.left);
      result += ProtoAdapter.SINT64.encodedSizeWithTag(2, value.right);
      result += ProtoAdapter.SINT64.encodedSizeWithTag(3, value.top);
      result += ProtoAdapter.SINT64.encodedSizeWithTag(4, value.bottom);
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, HeaderBBox value) throws IOException {
      ProtoAdapter.SINT64.encodeWithTag(writer, 1, value.left);
      ProtoAdapter.SINT64.encodeWithTag(writer, 2, value.right);
      ProtoAdapter.SINT64.encodeWithTag(writer, 3, value.top);
      ProtoAdapter.SINT64.encodeWithTag(writer, 4, value.bottom);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public HeaderBBox decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.left(ProtoAdapter.SINT64.decode(reader)); break;
          case 2: builder.right(ProtoAdapter.SINT64.decode(reader)); break;
          case 3: builder.top(ProtoAdapter.SINT64.decode(reader)); break;
          case 4: builder.bottom(ProtoAdapter.SINT64.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public HeaderBBox redact(HeaderBBox value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
